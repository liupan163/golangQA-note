package _9dictionary

//字典类型是一个引用类型

//golang的字典类型其实是一个哈希表hash table。
//键和元素的最大不同在于，前者是受限的，后者却是任意类型。

//哈希表会先用哈希函数把键转换为--->哈希值:哈希值通常是一个无符号的整数。
//一个哈希表会持有一定数量的桶bucket，也可以称之为哈希桶，这些哈希桶会均匀地存储其所属哈希表收纳的那些键值对

//映射的第一步就是把键转换成哈希值。go语言里，每个键值都是由他的哈希值代表的。

//Q:字典的键类型不能是哪些类型？
//A:不能使函数类型、字典类型、切片类型。

//键值之间要可以施加==和!=,换句话说，键值型的值必须要支持判等操作。上面三个不支持.

/*
哈希碰撞：golang--->对比hash值和key值
		 java--->重写equal和hash方法
*/

//Q:字典类型是并发安全吗？

//A:非原子操作需要加锁，map并发读写需要加锁，map操作并不是安全的
//判断一个操作是否是原子的，可以使用go run race 命令做数据的竞争检测
//1.9之后新加入的sync.Map(非分段锁)